#!/usr/bin/env node

'use strict';

var Version = require('../lib/version');
var Commander = require('commander');
var Dependo = require('../lib/dependo');
var converse = require('../lib/converse');
var fs = require('fs');
var path = require('path');

Commander
    .version(Version)
    .usage('[options] <file|dir ...>')
    .option('-j, --json', 'read the dependencies from a JSON file', false)
    .option('-x, --exclude <regex>', 'a regular expression for excluding modules')
    .option('-t, --title <title>', 'the title of the generated document (dependo)')
    .option('-e, --extensions', 'show the file extensions')
    .option('-v, --reverse', 'reverse direction of arrows', false)
    .parse(process.argv);

if (!Commander.args.length) {
  console.log(Commander.helpInformation());
  process.exit(1);
}

var src = Commander.args[0];

var directDeps = Commander.json &&
  fs.existsSync(src) &&
  JSON.parse(fs.readFileSync(src));

var stats = fs.statSync(src);
var baseDir = path.resolve(src);
if (!stats.isDirectory())
    baseDir = path.dirname(baseDir);
baseDir = baseDir.replace(/\\/g, '/') + '/';
var dependo = new Dependo(src, {
    baseDir: baseDir,
    exclude: Commander.exclude,
    directDeps: directDeps,
    title: Commander.title,
    transform: Commander.reverse ? converse : undefined,
    showFileExtension: Commander.extensions,
});

dependo.generateHtml(function(err, html) {
    if (err) {
        console.error('%s', err);
        process.exit(1);
    } else {
        process.stdout.write(html);
    }
});
